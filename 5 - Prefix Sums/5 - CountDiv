/**
 * https://app.codility.com/demo/results/trainingPDG3E4-ZBR/
 * O(1)
 * 87%
 */
class Solution {
    public int solution(int A, int B, int K) {
        int count = 0;
        if (A % K == 0) count++;
        if (A != B && B % K == 0) count++;
        if (B-A >= K) {
            count += (B - A - Math.max(count - 1, 0)) / K;
        }
        return count;
    }
}

/**
 * https://app.codility.com/demo/results/trainingZXYMMR-E7D/
 * O(1)
 * 100%
 *
 * This is so easy, and took me so much time. Basically, we must take the concept of prefix sums and remove the multiples of A from the multiples of B. There's the special case when A is multiple of K, because if we don't add we will lack 1 value.
 * A = 4
 * B = 16
 * K = 4
 * A/K=1; B/K=4; 4-1=3; A%K==0, +1
 */
class Solution {
    public int solution(int A, int B, int K) {
        int count = 0;
        if (A % K == 0) count++;
        count += (B/K);
        count -= (A/K);
        return count;
    }
}